function  Gen_G09_input_2016 (Atoms,Pos,foldername,filename,charge,multiplicity, additional_input,restart)

% if nargin<6
%      molecule1=Geometry(Atoms,Pos);
%     multiplicity=molecule1.get_multiplicity(charge);
% end
% if nargin<5
%     charge=0;
% end
charge=num2str(charge);
multiplicity=num2str(multiplicity);
species=Atoms;
xyz_out=Pos;
if nargin<8
 restart=false;   
end

if nargin<7
    additional_input='';
end

if strcmp('',foldername)
    fid= fopen([filename,'.gjf'],'w');
else
    
  
if 7~=exist (foldername,'dir')
dos(['mkdir ',foldername])
end
%   [charge multiplicity] = getcharge_gjf(filepath);
fid= fopen([foldername,'/',filename,'.gjf'],'w');

end
fprintf(fid,'%s \n',['%chk=',filename,'.chk']);
fprintf(fid,'%s \n','%mem=16GB');
fprintf(fid,'%s \n','%nprocshared=16');
 

    
    if restart
  protocol='# print what ever protocols here';
    else
  protocol='# print what ever protocols here';    
    end
% protocol='# opt(noeigen,modredundant)  B3LYP def2svp optcyc=50 scrf=(solvent=ethanol,smd) EmpiricalDispersion=GD3';
flag1=false;
if ~strcmp(additional_input,'')
    strrep(protocol,'modredundant,','');
    flag1=true;
end




fprintf(fid, '%s \n',protocol); % CAUTIONS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
fprintf(fid, '\n');
fprintf(fid, '%s \n',['Generated by code from X Fan']);
fprintf(fid, '\n');
fprintf(fid, '%s \n',[charge,' ',multiplicity]);
for ix=1:length(species)
fprintf(fid,'%s %10.9f %10.9f %10.9f \n',species{ix},xyz_out(ix,1),xyz_out(ix,2),xyz_out(ix,3));
end 
if flag1==true
fprintf(fid,'\n');
end
fprintf(fid,'%s \n', additional_input);
fprintf(fid,'\n');
fclose(fid);

end